'use strict';require('ts-jest').install();"use strict";
var __assign = this && this.__assign || Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
        t[p] = s[p];
    }
    return t;
};
var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) {try {step(generator.next(value));} catch (e) {reject(e);}}
        function rejected(value) {try {step(generator["throw"](value));} catch (e) {reject(e);}}
        function step(result) {result.done ? resolve(result.value) : new P(function (resolve) {resolve(result.value);}).then(fulfilled, rejected);}
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
var __generator = this && this.__generator || function (thisArg, body) {
    var _ = { label: 0, sent: function () {if (t[0] & 1) throw t[1];return t[1];}, trys: [], ops: [] },f,y,t,g;
    return g = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g[Symbol.iterator] = function () {return this;}), g;
    function verb(n) {return function (v) {return step([n, v]);};}
    function step(op) {
        if (f) throw new TypeError("Generator is already executing.");
        while (_) try {
            if (f = 1, y && (t = y[op[0] & 2 ? "return" : op[0] ? "throw" : "next"]) && !(t = t.call(y, op[1])).done) return t;
            if (y = 0, t) op = [0, t.value];
            switch (op[0]) {
                case 0:case 1:t = op;break;
                case 4:_.label++;return { value: op[1], done: false };
                case 5:_.label++;y = op[1];op = [0];continue;
                case 7:op = _.ops.pop();_.trys.pop();continue;
                default:
                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {_ = 0;continue;}
                    if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {_.label = op[1];break;}
                    if (op[0] === 6 && _.label < t[1]) {_.label = t[1];t = op;break;}
                    if (t && _.label < t[2]) {_.label = t[2];_.ops.push(op);break;}
                    if (t[2]) _.ops.pop();
                    _.trys.pop();continue;}

            op = body.call(thisArg, _);
        } catch (e) {op = [6, e];y = 0;} finally {f = t = 0;}
        if (op[0] & 5) throw op[1];return { value: op[0] ? op[1] : void 0, done: true };
    }
};
Object.defineProperty(exports, "__esModule", { value: true });
var config = require("../constants/config");
// import { requestingToServer} from '../actions';
var Api = /** @class */function () {
    function Api(state, dispatch) {
        this.GLOBAL_DATA = state();
        this.dispatch = typeof dispatch == 'function' ? dispatch : function (fnc) {};
    }
    Api.prototype.getFetch = function (url, option) {
        return __awaiter(this, void 0, void 0, function () {
            var API_URL, fetchData, optionData;
            return __generator(this, function (_a) {
                API_URL = config.API_URL + url;
                ///this.dispatch(requestingToServer());
                console.log(this.GLOBAL_DATA);
                console.log("this.GLOBAL_DATA");
                fetchData = {
                    method: 'POST',
                    body: {},
                    headers: new Headers(),
                    mode: 'cors' };

                optionData = __assign({}, fetchData, option);
                return [2 /*return*/, fetch(API_URL, optionData)];
            });
        });
    };
    return Api;
}();
exports.default = Api;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiQXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiQXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFBLHFCQUE4QztBQUM5QyxBQUFrRDtBQUVsRDtBQUtDLGlCQUFZLEFBQWMsT0FBQyxBQUFrQjtBQUV6QyxBQUFJLGFBQUMsQUFBVyxjQUFHLEFBQUssQUFBRSxBQUFDO0FBQzNCLEFBQUksYUFBQyxBQUFRLFdBQUcsT0FBTyxBQUFRLFlBQUcsQUFBVSxBQUFDLGFBQUEsQUFBUSxBQUFDLFdBQUEsVUFBUyxBQUFZLEtBQUUsQ0FBQyxBQUFDLEFBQ25GO0FBQUM7QUFHSyxrQkFBUSxXQUFkLFVBQWUsQUFBVSxLQUFDLEFBQWE7Ozs7QUFHakMsQUFBTywwQkFBRyxBQUFNLE9BQUMsQUFBTyxVQUFDLEFBQUcsQUFBQztBQUNsQyxBQUF1QztBQUN2QyxBQUFPLHdCQUFDLEFBQUcsSUFBQyxBQUFJLEtBQUMsQUFBVyxBQUFDLEFBQUM7QUFDOUIsQUFBTyx3QkFBQyxBQUFHLElBQUMsQUFBa0IsQUFBQyxBQUFDO0FBRTVCLEFBQVMsNEJBQUc7QUFDWixBQUFNLDRCQUFFLEFBQU07QUFDZCxBQUFJLDBCQUFFLEFBQUU7QUFDUixBQUFPLDZCQUFFLElBQUksQUFBTyxBQUFFO0FBQ3RCLEFBQUksMEJBQUUsQUFBTSxBQUNmOztBQUVHLEFBQVUsMENBQU8sQUFBUyxXQUFJLEFBQU0sQUFBQyxBQUFDO0FBQzFDLHNDQUFPLEFBQUssTUFBQyxBQUFPLFNBQUUsQUFBVSxBQUFDLEFBQUM7OztBQUNsQztBQUNGLFdBQUMsQUFBRDtBQTlCQSxBQThCQztBQUVELGtCQUFlLEFBQUcsQUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIGNvbmZpZyBmcm9tICcuLi9jb25zdGFudHMvY29uZmlnJztcbi8vIGltcG9ydCB7IHJlcXVlc3RpbmdUb1NlcnZlcn0gZnJvbSAnLi4vYWN0aW9ucyc7XG5cbmNsYXNzIEFwaSB7XG5cdFxuXHRHTE9CQUxfREFUQTpPYmplY3Q7XG5cdGRpc3BhdGNoOkZ1bmN0aW9uO1xuXG5cdGNvbnN0cnVjdG9yKHN0YXRlOkZ1bmN0aW9uLGRpc3BhdGNoPzpGdW5jdGlvbikge1xuXG5cdCAgICB0aGlzLkdMT0JBTF9EQVRBID0gc3RhdGUoKTtcblx0ICAgIHRoaXMuZGlzcGF0Y2ggPSB0eXBlb2YgZGlzcGF0Y2ggPT0nZnVuY3Rpb24nP2Rpc3BhdGNoOmZ1bmN0aW9uKGZuYzpGdW5jdGlvbil7fTtcblx0fVxuXG5cblx0YXN5bmMgZ2V0RmV0Y2godXJsOnN0cmluZyxvcHRpb246b2JqZWN0KVxuXHR7XG5cdFx0XG5cdFx0bGV0ICBBUElfVVJMID0gY29uZmlnLkFQSV9VUkwrdXJsO1xuXHRcdC8vL3RoaXMuZGlzcGF0Y2gocmVxdWVzdGluZ1RvU2VydmVyKCkpO1xuXHRcdGNvbnNvbGUubG9nKHRoaXMuR0xPQkFMX0RBVEEpO1xuXHRcdGNvbnNvbGUubG9nKFwidGhpcy5HTE9CQUxfREFUQVwiKTtcblx0XHQvLyBUaGUgcGFyYW1ldGVycyB3ZSBhcmUgZ29ubmEgcGFzcyB0byB0aGUgZmV0Y2ggZnVuY3Rpb25cblx0XHRsZXQgZmV0Y2hEYXRhID0geyBcblx0XHQgICAgbWV0aG9kOiAnUE9TVCcsIFxuXHRcdCAgICBib2R5OiB7fSxcblx0XHQgICAgaGVhZGVyczogbmV3IEhlYWRlcnMoKSxcblx0XHQgICAgbW9kZTogJ2NvcnMnLFxuXHRcdH1cblxuXHRcdGxldCBvcHRpb25EYXRhID0gey4uLmZldGNoRGF0YSwuLi5vcHRpb259O1xuXHRcdHJldHVybiBmZXRjaChBUElfVVJMLCBvcHRpb25EYXRhKTtcblx0fVxufVxuXG5leHBvcnQgZGVmYXVsdCBBcGk7Il19